<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>resource syntax</title>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../css/styles_standard.css">
</head>
<body>

  <div id="topictop">&nbsp;</div>
  <div id="topictitleleft">
    <div id="topictitle">
      <h3>resource syntax</h3>
    </div>
  </div>
  
  <div id="main">
    <img src="../img/logo.png" width="150" style="float:left; margin-right:12px; margin-bottom:24px;" alt="logo">
    <p>
      This page explains the syntax that is used by resource files.
      You need this when you want to provide custom resource or RichContent types as well as when you want to manually edit them.
    </p>

    <p class="big">
      General remarks
    </p>
    <p>
    Resources are represented by XML-files with the file extension *.ccr or by s√ºecial other files (*.ccp).
    These XML-files must be "well-formed" documents, but they neither use namespaces nor is there a XML schema file.
    As case matters in XML, it should be always the same: any node or attribute name must be <b>all lowercase</b>. 
    </p>
    <p>
      The node name representing a resource depends on the resource type:
      Any custom or included resource type registers itself under a special so-called "alias". This alias is the node name.
      For example, the included resource types' aliases are:
      <ul>
        <li><code>file</code> for file resources</li>
        <li><code>code</code> for source code resources</li>
        <li><code>library</code> for library resources</li>
        <li><code>project</code> for project resources</li>
        <li><code>group</code> for group resources</li>
        <li><code>task</code> for task resources</li>
      </ul>
    </p>
    <p>
    Resources can have child resources, represented by child nodes. Those follow the same syntax rules.
    </p>
    <br>

    <p class="big">
      Attributes
    </p>
    <p>
    There are some properties any resource has, as defined in the <b><code>IResource</code></b> interface.
    These properties should always be based on the same <b>attributes:</b>
    </p>
    <ul class="shr">
      <li><code>name</code> - the resource's name</li>
      <li><code>guid</code> - the resource's GUID
      which can be created with the <code>System.Guid.NewGuid()</code> or with an online tool such as <a href="http://www.guidgen.com">www.guidgen.com</a></li>
      <li><code>notes</code> - user-defined notes related to the resource</li>
      <li><code>description</code> - a short description of the resource</li>
    </ul>
    <p>
    A resource type can of course define its own attributes for its additional properties.
    </p>
    <br>

    <p class="big">
      Addtitional data
    </p>
    <p>
    Additional data for a resource is stored in the <code>/cc-resource-file/data</code> element, where each resource
    has a <code>&lt;resource-data&gt;</code> element with the resource's identifier.
    </p>
    <p>
    Any resource can have multiple <code>metadata</code> elements.
    Their <code>name</code> attribute defines the metadata's name, whereas the node content is the value.
    </p>
    <p>
    The <b><code>RichContent</code></b> child node contains the RichContent members for the resource.
    Those <b>will be ignored unless</b> the resource type implements <b><code>IRichContentResource</code></b>. 
    </p>
    <p>
    Other additional data include a "created on" and a "last modified" date and any references to other resources.
    </p>
    
    <br>
    
    <p class="big">
      Attributes for included types
    </p>
    <p>
    <ul>
      <li>Files:
        <ul>
          <li><code>path</code> - the path to the file</li>
        </ul>
      </li>
      <li>Source Code:
        <ul>
          <li><i>any attributes from files</i></li>
          <li><code>language</code> - the GUID of the language the source is written in</li>
          <li><code>compilation-path</code> - the path the file would be compiled to</li>
          <li><code>compatible-languages</code> - a list of GUIDs for compatible languages, separated by <code>;</code></li>
        </ul>
      </li>
      <li>Libraries:
        <ul>
          <li><i>any attributes from files and source code</i></li>
          <li><code>author</code> - the library's author's name</li>
          <li><code>license</code> - the library's license</li>
          <li><code>version</code> - the library's version</li>
        </ul>
      </li>
      <li>Projects:
        <ul>
          <li><code>language</code> - the GUID of the language the project is written in</li>
          <li><code>compilation-path</code> - the path the project would be compiled to</li>
          <li><code>compatible-languages</code> - a list of GUIDs for compatible languages, separated by <code>;</code></li>
          <li><code>priority</code> - a value from 0 (lowest) to 2 (highest) priority</li>
        </ul>
      </li>
      <li>Tasks:
        <ul>
          <li><code>enddate</code> - the date the task ends.</li>
        </ul>
      </li>
      <li>Groups:
        <ul>
          <li><i>groups do not have additional attributes.</i></li>
        </ul>
      </li>
    </p>

  </div>
  <div id="foot">
    
  </div>
</body>
</html>

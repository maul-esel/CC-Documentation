<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Portability & command line</title>
<meta http-equiv="Content-Script-Type" content="text/javascript">
<meta http-equiv="Content-Style-Type" content="text/css">
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="stylesheet" type="text/css" href="../css/styles_standard.css">
</head>
<body>

  <div id="topictop">&nbsp;</div>
  <div id="topictitleleft">
    <div id="topictitle">
      <h3>Portability & command line</h3>
    </div>
  </div>
  
  <div id="main">
    <img src="../img/logo.png" width="150" style="float:left; margin-right:12px; margin-bottom:24px;" alt="logo">
    <p>
      While CC is meant to be a fully portable application, there are a few features that don't work from a portable app.
      Especially registered file extensions and COM support must be registered on the local machine.<br />
      <b><u>CC requires the .NET framework on it's target machine!</u></b>
    </p>

    <p class="big">
      Portability
    </p>
    <p>
      As mentioned above, CC is meant to be portable. However, by default it stores its settings in your <code>AppData</code> folder.<br />
      You can avoid this by passing <code>--config <b>"&lt;file&gt;"</b></code> to CC, where <b>&lt;file&gt;</b> is the file to use for settings.
      So you can take CC on your USB-Stick with you, as well as you can "uninstall" it by just deleting its directory.
      <b>Don't forget to backup your resource files before!</b>
    </p>
    <p>
      CC is neither packaged in the PortableApps format, nor is it likely to become packaged.
      CC is written in C#, so it requires the .NET framework. PortableApps does not accept this.
    </p>
    <br>

    <p class="big">
      Command line
    </p>
    <p>
      To keep portability while offering comfortable features such as registered file extensions,
      CC supports some command line switches:
    </p>
    <ul>
      <li><code>--install_ext</code> installs the <code>*.ccr</code> file extension and to registers CC as default handler.</li>
      <li><code>--uninstall_ext</code> uninstalls the <code>*.ccr</code> file extension.</li>
      <li><code>--install_COM</code> will install CC's COM features to the local machine (in a future version).</li>
      <li><code>--uninstall_COM</code> will uninstall CC's COM features (in a future version).</li>
      <li><code>--install_full</code> will install both the COM features and the file extension
        (for now, it's equal to <code>--install_ext</code>).</li>
      <li>As described above, pass <code>--config "&lt;file&gt;"</code> to CC to use another file for storing settings.</li>
      <li>If you pass the name of a file to CC, it will try to read it as <code>*.ccr</code> file
        and parse the contained resources.</li>
    </ul>

  </div>
  <div id="foot">
    ChameleonCoder - 2011
  </div>
</body>
</html>
